# Automatically generated by Pynguin.
import pytest
import src.display_number as module_0


def test_case_0():
    int_0 = 6
    dict_0 = None
    set_0 = {dict_0}
    float_0 = -65.1507
    number_display_0 = module_0.NumberDisplay(int_0, dict_0)
    assert number_display_0.value == 6
    assert number_display_0.limit is None
    str_0 = 'Ck)})]Rz$~C\nLj-!'
    number_display_1 = module_0.NumberDisplay(int_0, str_0)
    assert number_display_1.value == 6
    assert number_display_1.limit == 'Ck)})]Rz$~C\nLj-!'
    number_display_2 = module_0.NumberDisplay(set_0, float_0)
    assert number_display_2.value == {None}
    assert number_display_2.limit == pytest.approx(-65.1507, abs=0.01, rel=0.01
        )
    var_0 = number_display_1.str()
    assert var_0 == '06'


def test_case_1():
    list_0 = None
    str_0 = 'o.-`a\r'
    number_display_0 = module_0.NumberDisplay(list_0, str_0)
    assert number_display_0.value is None
    assert number_display_0.limit == 'o.-`a\r'


def test_case_2():
    str_0 = '0'
    float_0 = 1994.36143
    number_display_0 = module_0.NumberDisplay(str_0, float_0)
    assert number_display_0.value == '0'
    assert number_display_0.limit == pytest.approx(1994.36143, abs=0.01,
        rel=0.01)
    var_0 = number_display_0.clone()
    assert var_0.value == '0'
    assert var_0.limit == pytest.approx(1994.36143, abs=0.01, rel=0.01)
